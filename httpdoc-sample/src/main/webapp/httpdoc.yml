httpdoc: "v1.4.2"
protocol: "http"
hostname: "localhost"
port: 8080
context: ""
controllers:
- name: "JestfulHttpdocController"
  path: "/jestful"
  operations:
  - name: "render"
    path: "/httpdoc"
    method: "GET"
    parameters:
    - name: "charset"
      scope: "query"
      type: "String"
    - name: "contentType"
      scope: "query"
      type: "String"
    result:
      type: "void"
    tags:
    - "JestfulHttpdocController"
  - name: "render"
    path: "/httpdoc.{suffix}"
    method: "GET"
    parameters:
    - name: "suffix"
      scope: "path"
      type: "String"
    - name: "charset"
      scope: "query"
      type: "String"
    - name: "contentType"
      scope: "query"
      type: "String"
    result:
      type: "void"
    tags:
    - "JestfulHttpdocController"
  tags:
  - "JestfulHttpdocController"
- name: "ProductAPI"
  path: "/products"
  operations:
  - name: "list"
    path: "/{page}/{size}"
    method: "GET"
    multipart: true
    parameters:
    - name: "page"
      alias: "p"
      scope: "path"
      type: "int"
    - name: "size"
      alias: "s"
      scope: "path"
      type: "int"
    - name: "status"
      scope: "field"
      type: "$/schemas/ProductStatus"
    - name: "arr"
      alias: "strings"
      scope: "field"
      type: "String[]"
    - name: "products"
      scope: "field"
      type: "$/schemas/Product[]"
    - name: "file1"
      scope: "body"
      type: "File"
    - name: "file2"
      scope: "body"
      type: "File"
    result:
      type: "$/schemas/ProductListResult"
    tags:
    - "product"
  - name: "update"
    path: "/{Id}"
    method: "PUT"
    multipart: true
    parameters:
    - name: "Id"
      scope: "path"
      type: "Long"
    - name: "name"
      scope: "matrix"
      path: "Id"
      type: "String"
    - name: "map"
      scope: "body"
      type: "String"
    - name: "product"
      scope: "body"
      type: "$/schemas/Product"
    - name: "picture"
      scope: "body"
      type: "File[]"
    - name: ""
      scope: "body"
      type: "Dictionary<String, File>"
    result:
      type: "$/schemas/ProductUpdateResult"
    tags:
    - "product"
  - name: "create"
    path: ""
    method: "POST"
    parameters:
    - name: ""
      scope: "body"
      type: "$/schemas/Product"
      description: "产品"
    result:
      type: "$/schemas/ProductCreateResult"
      description: "产品创建结果"
    tags:
    - "product"
    description: "创建产品"
  tags:
  - "product"
  description: "产品管理器"
- name: "ArticleController"
  path: ""
  operations:
  - name: "create"
    path: "/articles/"
    method: "POST"
    parameters:
    - scope: "body"
      type: "$/schemas/Article"
    result:
      type: "$/schemas/ArticleCreateResult"
  - name: "list"
    path: "/articles/{page}/{size}"
    method: "POST"
    parameters:
    - name: "page"
      scope: "path"
      type: "int"
    - name: "size"
      scope: "path"
      type: "int"
    - name: "article"
      scope: "query"
      type: "String"
    - name: "article2"
      scope: "query"
      type: "String"
    result:
      type: "$/schemas/ArticleListResult"
  description: "文章管理器"
schemas:
  ProductStatus:
    constants:
      A: "A"
      B: "B"
      C: "C"
    description: "产品状态"
  Product:
    superclass: "Object"
    properties:
      b:
        type: "byte"
      bytes:
        type: "byte[][]"
      c:
        type: "char"
      d:
        type: "double"
      f:
        type: "float"
      i:
        type: "int"
      id:
        alias: "ID"
        type: "Long"
        description: "产品ID"
      ints:
        type: "int[]"
      l:
        type: "long"
      name:
        type: "String"
        description: "产品名称"
      price:
        type: "Number"
        description: "产品价格"
      s:
        type: "short"
      status:
        type: "$/schemas/ProductStatus"
        description: "产品状态"
      yon:
        type: "boolean"
    description: "产品"
  ProductListResult:
    superclass: "Object"
    properties:
      products:
        type: "$/schemas/Product[]"
  ProductUpdateResult:
    superclass: "Object"
    properties:
      product:
        type: "$/schemas/Product"
  ProductCreateResult:
    superclass: "Object"
    properties:
      product:
        type: "$/schemas/Product"
  Customer:
    superclass: "Object"
    properties:
      name:
        type: "String"
    description: "用户"
  Comment:
    superclass: "Object"
    properties:
      content:
        type: "String"
      customer:
        type: "$/schemas/Customer"
    description: "评论"
  Article:
    superclass: "Object"
    properties:
      author:
        type: "$/schemas/Customer"
      comments:
        type: "$/schemas/Comment[]"
      content:
        type: "String"
      title:
        type: "String"
    description: "文章"
  ArticleCreateResult:
    superclass: "Object"
  ArticleListResult:
    superclass: "Object"
    properties:
      articles:
        type: "$/schemas/Article[]"
    description: "文章列表结果"
